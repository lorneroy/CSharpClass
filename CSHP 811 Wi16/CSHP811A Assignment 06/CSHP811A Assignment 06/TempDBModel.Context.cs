//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CSHP811A_Assignment_06
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class tempdbEntities : DbContext
    {
        public tempdbEntities()
            : base("name=tempdbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int pDelCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pDelCustomer", customerIdParameter);
        }
    
        public virtual int pInsCustomer(Nullable<int> customerId, string customerName)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pInsCustomer", customerIdParameter, customerNameParameter);
        }
    
        public virtual ObjectResult<pSelCustomer_Result> pSelCustomer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pSelCustomer_Result>("pSelCustomer");
        }
    
        public virtual int pUpdCustomer(Nullable<int> customerId, string newCustomerName)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var newCustomerNameParameter = newCustomerName != null ?
                new ObjectParameter("NewCustomerName", newCustomerName) :
                new ObjectParameter("NewCustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pUpdCustomer", customerIdParameter, newCustomerNameParameter);
        }
    }
}
